<?xml version="1.0" encoding="utf-8"?>
<package>
  <metadata>
    <id>AdamsLair.Duality</id>
    <version>2.10.0</version>
    <authors>Fedja Adam</authors>
    <owners>Fedja Adam</owners>
    <title>Duality Core</title>
    <iconUrl>https://github.com/AdamsLair/duality/raw/release/Build/NuGetPackageSpecs/Icons/Duality.png</iconUrl>
    <licenseUrl>https://github.com/AdamsLair/duality/raw/release/LICENSE</licenseUrl>
    <projectUrl>https://github.com/AdamsLair/duality</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>The Duality engine core.</summary>
    <description>The Duality engine core.</description>
    <tags>Duality Core</tags>
    <releaseNotes>Component Exec Order Algorithm, Micro-Opt GatherInitComponents, ComponentExecutionOrder Cleanup
#ADD: Implemented a first draft of the algorithm that determines global component execution order based on per-component local constraints that are provided via attribute.
#CHANGE: Micro-optimized the GatherInitComponents method (for vs. foreach).
#CHANGE: Simplified the ComponentExecutionOrder class a bit and optimized to reduce sort order rebuilds to a minimum.
#CHANGE: Added a fast-path for the special case of de/activating a flat GameObject individually that exploits the fact that components are already sorted per-object. 
#ADD: Added more unit tests to check specifically for both flat and deep GameObject cases, so no special case code path is missed.
#REMOVE: Removed internal OnActivate / OnDeactivate methods in favor of specialized inline code to be optimized further. 
#CHANGE: Editor objects are now applying deterministic execution order to added and removed GameObject trees.
#ADD: Added an execution order attribute and execution relation enum.
#CHANGE: When adding or removing GameObject trees to / from the currently active Scene, Components are now initialized and shut down using the deterministic execution order.
#ADD: Added multi-GameObject add / remove events to GameObjectManager and Scene. 
#CHANGE: Flagged the old single-GameObject add / remove events as obsolete.
#REMOVE: Removed some internal GameObject methods that were no longer used after recent init order changes.
#CHANGE: When activating or deactivating GameObjects individually, their Components and their child object's Components are now initialized and shut down in deterministic order.
#CHANGE: GameObjects now enforce proper Component order after being loaded as part of a Scene or Prefab.
#FIX: Fixed GameObject component and child iteration methods to work reliably in all cases of modifying their underlying collection at the cost of internal data copying.
#CHANGE: When adding new Components to a GameObject, they are now inserted into the proper position in the objects internal list. 
#CHANGE: GameObject IterateComponents now performs forward iteration on the internal list to reflect Component execution order. 
#ADD: Added some more tests regarding Component execution order when loading Scenes or Prefabs with potentially unsorted internal GameObject lists.</releaseNotes>
    <dependencies>
      <dependency id="AdamsLair.Duality.Primitives" version="2.0.4" />
      <dependency id="AdamsLair.NVorbis" version="0.7.5" />
      <dependency id="AdamsLair.FarseerDuality" version="4.1.1" />
    </dependencies>
    <references>
      <reference file="Duality.dll" />
    </references>
  </metadata>
  <files>
    <file src="..\Output\Duality.dll" target="lib" />
    <file src="..\Output\Duality.pdb" target="lib" />
    <file src="..\Output\Duality.xml" target="lib" />
  </files>
</package>